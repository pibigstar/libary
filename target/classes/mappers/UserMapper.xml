<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lei.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.lei.entity.User" >
    <id column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="signature" property="signature" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    <result column="email_code" property="emailCode" jdbcType="VARCHAR" />
    <result column="last_ip" property="lastIp" jdbcType="VARCHAR" />
    <result column="last_time" property="lastTime" jdbcType="TIMESTAMP" />
    <result column="last_address" property="lastAddress" jdbcType="VARCHAR" />
  </resultMap>
  
  <!-- 角色和权限查询 -->
  <resultMap id="UserRoleMap" type="com.lei.entity.User" extends="BaseResultMap" >
    <!-- 进行 多表关联插叙，先关联user和role -->  
	  <collection property="roleSet" column="role_id" ofType="com.lei.entity.Role">  
		  <id property="id" column="role_id"/>  
		  <result property="name" column="role_name"/>  
		  <!-- 再在role中关联role和permission -->  
		  <collection property="permissionSet" column="permission_id" ofType="com.lei.entity.Permission">  
			  <id property="id" column="permission_id"/>  
			  <result property="name" column="permission_name"/>  
			  <result property="pid" column="permission_pid"/>  
		  </collection>  
	  </collection> 
  </resultMap>
  
  
  <sql id="Base_Column_List" >
    user_id, username, email, phone, password, age, signature, sex, create_time, update_time, 
    state, email_code, last_ip, last_time, last_address
  </sql>
  
   <sql id="select-base"> 
    select  
     u.user_id,u.username,u.email,u.phone, u.password, u.age, u.signature, u.sex, u.create_time, u.update_time, 
     u.state, u.email_code, u.last_ip, u.last_time, u.last_address,
     r.role_id,r.role_name,
     p.permission_id,p.permission_name,p.permission_pid
    FROM    
      sys_user as u,    
      sys_role as r,    
      sys_permission as p,    
      sys_role_permission as rp,    
      sys_user_role as ru    
    WHERE    
      u.user_id = ru.user_id
    AND    
      r.role_id = ru.role_id    
    AND    
      p.permission_id = rp.permission_id    
    AND    
      r.role_id = rp.role_id    
  </sql> 
    
  <!-- 通过用户名拿到其所有的角色和权限 -->
  <select id="findUserByUserName" parameterType="string" resultMap="UserRoleMap">    
     <include refid="select-base" />    
    	AND u.username = #{username} 
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where user_id = #{userId,jdbcType=VARCHAR}
  </select>
  <!--  
  <select id="findUserByUserName" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where username = #{username,jdbcType=VARCHAR}
  </select>
  -->
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from sys_user
    where user_id = #{userId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.lei.entity.User" >
    insert into sys_user (user_id, username, email, 
      phone, password, age, 
      signature, sex, create_time, 
      update_time, state, email_code, 
      last_ip, last_time, last_address
      )
    values (#{userId,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, 
      #{signature,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{state,jdbcType=VARCHAR}, #{emailCode,jdbcType=VARCHAR}, 
      #{lastIp,jdbcType=VARCHAR}, #{lastTime,jdbcType=TIMESTAMP}, #{lastAddress,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lei.entity.User" >
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="signature != null" >
        signature,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="emailCode != null" >
        email_code,
      </if>
      <if test="lastIp != null" >
        last_ip,
      </if>
      <if test="lastTime != null" >
        last_time,
      </if>
      <if test="lastAddress != null" >
        last_address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="signature != null" >
        #{signature,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="emailCode != null" >
        #{emailCode,jdbcType=VARCHAR},
      </if>
      <if test="lastIp != null" >
        #{lastIp,jdbcType=VARCHAR},
      </if>
      <if test="lastTime != null" >
        #{lastTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastAddress != null" >
        #{lastAddress,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lei.entity.User" >
    update sys_user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="signature != null" >
        signature = #{signature,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="emailCode != null" >
        email_code = #{emailCode,jdbcType=VARCHAR},
      </if>
      <if test="lastIp != null" >
        last_ip = #{lastIp,jdbcType=VARCHAR},
      </if>
      <if test="lastTime != null" >
        last_time = #{lastTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastAddress != null" >
        last_address = #{lastAddress,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lei.entity.User" >
    update sys_user
    set username = #{username,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      signature = #{signature,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=VARCHAR},
      email_code = #{emailCode,jdbcType=VARCHAR},
      last_ip = #{lastIp,jdbcType=VARCHAR},
      last_time = #{lastTime,jdbcType=TIMESTAMP},
      last_address = #{lastAddress,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
</mapper>